(self.webpackChunkrestaurant=self.webpackChunkrestaurant||[]).push([[236],{120:(n,e,t)=>{"use strict";t.d(e,{Z:()=>B});var r=t(15),i=t.n(r),o=t(645),A=t.n(o),s=t(667),a=t.n(s),c=new URL(t(367),t.b),m=new URL(t(411),t.b),l=new URL(t(581),t.b),d=A()(i()),f=a()(c),u=a()(m),p=a()(l);d.push([n.id,"@font-face {\r\n    font-family: 'Countryside';\r\n    src: url("+f+") format('truetype');\r\n}\r\n\r\n@font-face {\r\n    font-family: 'RobotoLight';\r\n    src: url("+u+") format('truetype');\r\n}\r\n\r\n@font-face {\r\n    font-family: 'RobotoRegular';\r\n    src: url("+p+") format('truetype');\r\n}\r\n\r\n#menu-item-container {\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n#menu-item-container img {\r\n    max-height: 40px;\r\n}\r\n\r\n#item-body {\r\n    box-sizing: border-box;\r\n    width: 80%;\r\n    padding-left: 5%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n}\r\n\r\n#item-body p {\r\n    margin: 0;\r\n}\r\n\r\n#item-name {\r\n    font-family: 'Countryside';\r\n    font-size: medium;\r\n    font-weight: bold;\r\n}\r\n\r\n#item-description {\r\n    font-family: 'RobotoLight';\r\n    font-size: small;\r\n}\r\n\r\n#item-price {\r\n    width: 10%;\r\n    font-family: 'RobotoRegular';\r\n    font-size: medium;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}","",{version:3,sources:["webpack://./src/components/items/menu/style.css"],names:[],mappings:"AAAA;IACI,0BAA0B;IAC1B,+DAAuD;AAC3D;;AAEA;IACI,0BAA0B;IAC1B,+DAAuD;AAC3D;;AAEA;IACI,4BAA4B;IAC5B,+DAAyD;AAC7D;;AAEA;IACI,WAAW;IACX,sBAAsB;IACtB,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,sBAAsB;IACtB,UAAU;IACV,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,8BAA8B;IAC9B,uBAAuB;AAC3B;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,0BAA0B;IAC1B,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,0BAA0B;IAC1B,gBAAgB;AACpB;;AAEA;IACI,UAAU;IACV,4BAA4B;IAC5B,iBAAiB;IACjB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB",sourcesContent:["@font-face {\r\n    font-family: 'Countryside';\r\n    src: url('../fonts/Countryside.ttf') format('truetype');\r\n}\r\n\r\n@font-face {\r\n    font-family: 'RobotoLight';\r\n    src: url('../fonts/RobotoLight.ttf') format('truetype');\r\n}\r\n\r\n@font-face {\r\n    font-family: 'RobotoRegular';\r\n    src: url('../fonts/RobotoRegular.ttf') format('truetype');\r\n}\r\n\r\n#menu-item-container {\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n#menu-item-container img {\r\n    max-height: 40px;\r\n}\r\n\r\n#item-body {\r\n    box-sizing: border-box;\r\n    width: 80%;\r\n    padding-left: 5%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n}\r\n\r\n#item-body p {\r\n    margin: 0;\r\n}\r\n\r\n#item-name {\r\n    font-family: 'Countryside';\r\n    font-size: medium;\r\n    font-weight: bold;\r\n}\r\n\r\n#item-description {\r\n    font-family: 'RobotoLight';\r\n    font-size: small;\r\n}\r\n\r\n#item-price {\r\n    width: 10%;\r\n    font-family: 'RobotoRegular';\r\n    font-size: medium;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}"],sourceRoot:""}]);const B=d},363:(n,e,t)=>{"use strict";t.d(e,{Z:()=>s});var r=t(15),i=t.n(r),o=t(645),A=t.n(o)()(i());A.push([n.id,"#menu-container {\r\n    height: 80%;\r\n    width: 80%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n}\r\n","",{version:3,sources:["webpack://./src/components/menu/style.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,UAAU;IACV,aAAa;IACb,sBAAsB;IACtB,6BAA6B;IAC7B,mBAAmB;AACvB",sourcesContent:["#menu-container {\r\n    height: 80%;\r\n    width: 80%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n}\r\n"],sourceRoot:""}]);const s=A},667:n=>{"use strict";n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},932:(n,e,t)=>{"use strict";t.r(e),t.d(e,{component:()=>y});var r=t(379),i=t.n(r),o=t(795),A=t.n(o),s=t(569),a=t.n(s),c=t(565),m=t.n(c),l=t(216),d=t.n(l),f=t(589),u=t.n(f),p=t(120),B={};B.styleTagTransform=u(),B.setAttributes=m(),B.insert=a().bind(null,"head"),B.domAPI=A(),B.insertStyleElement=d(),i()(p.Z,B),p.Z&&p.Z.locals&&p.Z.locals;var C=t(363),b={};async function y(n=""){const e=document.createElement("div");e.id="menu-container";const{items:r}=await t(884)(`./${n}.js`);return r.forEach((n=>{const t=function(n="",e="",t="",r=0){const i=document.createElement("div");i.id="menu-item-container",i.appendChild(n);const o=document.createElement("div");o.id="item-body";const A=document.createElement("p");A.id="item-name",A.textContent=e,o.appendChild(A);const s=document.createElement("p");s.id="item-description",s.textContent=t,o.appendChild(s),i.appendChild(o);const a=document.createElement("p");return a.id="item-price",a.textContent=r,i.appendChild(a),i}(n.icon,n.name,n.description,n.price);e.appendChild(t)})),e}b.styleTagTransform=u(),b.setAttributes=m(),b.insert=a().bind(null,"head"),b.domAPI=A(),b.insertStyleElement=d(),i()(C.Z,b),C.Z&&C.Z.locals&&C.Z.locals},884:(n,e,t)=>{var r={"./component.js":[932],"./drinks.js":[460,460],"./food.js":[600,600]};function i(n){if(!t.o(r,n))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}));var e=r[n],i=e[0];return Promise.all(e.slice(1).map(t.e)).then((()=>t(i)))}i.keys=()=>Object.keys(r),i.id=884,n.exports=i},367:(n,e,t)=>{"use strict";n.exports=t.p+"8f1e59fe4e7541f217c3.ttf"},411:(n,e,t)=>{"use strict";n.exports=t.p+"8be2d1487420548b3b8d.ttf"},581:(n,e,t)=>{"use strict";n.exports=t.p+"a8d6ac03c7b96b7acb62.ttf"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,